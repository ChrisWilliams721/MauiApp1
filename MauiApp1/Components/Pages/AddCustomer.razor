@page "/addcustomer"
@using MauiApp1.Components
<h3>Customers</h3>
@if (customers.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Surname</th>
                <th>VAT_ID_number</th>
                <th>Email</th>
                <th>Phone Number</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var customer in customers)
            {
                <tr>
                    <td>
                        @if (editTarget == customer)
                        {
                            <InputText @bind-Value="customer.Name" class="form-control" />
                        }
                        else
                        {
                            @customer.Name
                        }
                    </td>
<td>
                        @if (editTarget == customer)
                        {
                            <InputText @bind-Value="customer.Surname" class="form-control" />
                        }
                        else
                        {
                            @customer.Surname
                        }
                    </td>
<td>
                        @if (editTarget == customer)
                        {
                            <InputText @bind-Value="customer.VAT_ID_numberToString" class="form-control" />
                        }
                        else
                        {
                            @customer.VAT_ID_number
                        }
                    </td>
<td>
                        @if (editTarget == customer)
                        {
                            <InputText @bind-Value="customer.Email" class="form-control" />
                        }
                        else
                        {
                            @customer.Email
                        }
                    </td>
                    <td>
                        @if (editTarget == customer)
                        {
                            <InputText @bind-Value="customer.Phone_NumberToString" class="form-control" />
                        }
                        else
                        {
                            @customer.Phone_Number
                        }
                    </td>
<td>
                        @if (editTarget == customer)
                        {
                            <button @onclick="() => UpdateCustomer(customer)" class="btn btn-primary">Save</button>
                            <button @onclick="CancelEdit" class="btn btn-secondary">Cancel</button>
                        }
                        else
                        {
                            <button @onclick="() => EditCustomer(customer)" class="btn btn-primary">Edit</button>
                            <button @onclick="() => DeleteCustomer(customer)" class="btn btn-danger">Delete</button>
                        }
</td>

                </tr>
            }
        </tbody>
    </table>
} else
{
    <p @>No customers found.</p>
}

<button @onclick="LoadCustomersToFile" class="btn btn-primary" disabled="@customersLoaded">
    @if (customersLoaded)
    {
        <span></span>
    }
    else
    {
        <span>Show All</span>
    }
</button>
<h3>AddCustomer</h3>
<EditForm Model="@newCustomer" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="name">Name:</label>
        <InputText id="name" @bind-Value="newCustomer.Name" class="form-control" />
    </div>
    <!-- Add other input fields for Surname, VAT_ID_number, Email, Phone_Number, etc. -->
    <div class="form-group">
        <label for="name">Surname:</label>
        <InputText id="name" @bind-Value="newCustomer.Surname" class="form-control" />
    </div>
    <div class="form-group">
        <label for="name">VAT_ID_number:</label>
        <InputText id="VAT_ID_number" @bind-Value="newCustomer.VAT_ID_numberToString" class="form-control" />
    </div>
    <div class="form-group">
        <label for="name">Email:</label>
        <InputText id="name" @bind-Value="newCustomer.Email" class="form-control" />
    </div>
    <div class="form-group">
        <label for="name">Phone Number:</label>
        <InputText id="name" @bind-Value="newCustomer.Phone_NumberToString" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
   
</EditForm>

@code {
    private Customer newCustomer = new Customer();
    private List<Customer> customers = new List<Customer>();
    private Customer editTarget = null;
    private bool customersLoaded = false;




    private void HandleValidSubmit()
    {
        customers.Add(newCustomer);
        SaveCustomersToFile(customers);
        newCustomer = new Customer();
    }

    private void SaveCustomersToFile(List<Customer> customers)
    {
        string filePath = @"C:\Users\wchri\OneDrive\Documents\Visual Studio 2022\MauiApp1\MauiApp1\customers.txt";
        using StreamWriter writer = new StreamWriter(filePath);
        foreach (var customer in customers)
        {
            writer.WriteLine($"{customer.Name},{customer.Surname},{customer.VAT_ID_number},{customer.Current_Date},{customer.Email},{customer.Phone_Number}");
        }
    }
    public void LoadCustomersToFile()
    {
        string filePath = @"C:\Users\wchri\OneDrive\Documents\Visual Studio 2022\MauiApp1\MauiApp1\customers.txt";
        if (File.Exists(filePath))
        {
            using StreamReader reader = new StreamReader(filePath);
            string line;
            while ((line = reader.ReadLine()) != null)
            {
                var parts = line.Split(',');
                customers.Add(new Customer
                {
                    Name = parts[0],
                    Surname = parts[1],
                    VAT_ID_number = int.Parse(parts[2]),
                    Current_Date = DateTime.Parse(parts[3]),
                    Email = parts[4],
                    Phone_Number = int.Parse(parts[5])
                });
            }
        }
        customersLoaded = true;
    }
    private void EditCustomer(Customer customer)
    {
        editTarget = customer;
    }
    private void UpdateCustomer(Customer customer)
    {
        editTarget = null;
        SaveCustomersToFile(customers);
    }
    private void DeleteCustomer(Customer customer)
    {
        customers.Remove(customer);
        SaveCustomersToFile(customers);
    }
    private void CancelEdit()
    {
        editTarget = null;
    }
    
}

@page "/addequipment"
@using MauiApp1.Components
<h3>AddEquipment</h3>
@if (equipments.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>Equipment Name</th>
                <th>ID</th>
                <th>Category</th>
                <th>Daily Rate</th>
                <th>Description</th>
                <th>Action</th>
                
            </tr>
        </thead>
        <tbody>
            @foreach (var equipment in equipments)
            {
                <tr>
                    <td>
                        @if (equipment == editTarget)
                        {
                            <InputText @bind-Value="equipment.Equipment_Name" class="form-control" />
                        }
                        else
                        {
                            @equipment.Equipment_Name
                        }
                    </td>
                    <td>
                        @if (equipment == editTarget)
                        {
                            <InputText @bind-Value="equipment.Equipment_IDToString" class="form-control" />
                        }
                        else
                        {
                            @equipment.Equipment_ID
                        }
                    </td>
                    <td>
                        @if (equipment == editTarget)
                        {
                            <InputText @bind-Value="equipment.Category_IDToString" class="form-control" />
                        }
                        else
                        {
                            @equipment.Equipment_Name
                        }
                    </td>
                    <td>
                        @if (equipment == editTarget)
                        {
                            <InputText @bind-Value="equipment.Daily_RateToString" class="form-control" />
                        }
                        else
                        {
                            @equipment.Equipment_Name
                        }
                    </td>
                    <td>
                        @if (equipment == editTarget)
                        {
                            <InputText @bind-Value="equipment.Description" class="form-control" />
                        }
                        else
                        {
                            @equipment.Equipment_Name
                        }
                    </td>
                    <td>
                        @if (equipment == editTarget)
                        {
                            <button class="btn btn-primary" @onclick="() => UpdateEquipment(equipment)">Save</button>
                            <button class="btn btn-secondary" @onclick="CancelEdit">Cancel</button>
                        }
                        else
                        {
                            <button class="btn btn-primary" @onclick="() => EditEquipment(equipment)">Edit</button>
                            <button class="btn btn-danger" @onclick="() => DeleteEquipment(equipment)">Delete</button>
                        }
                    </td>
                    
                </tr>
            }
        </tbody>
    </table>
} else
{
    <p @>No Equipment Found.</p>
}
<button @onclick="LoadEquipmentsToFile" class="btn btn-primary" disabled="@equipmentsLoaded">
    @if (equipmentsLoaded)
    {
        <span></span>
    }
    else
    {
        <span>Show All</span>
    }
</button>

<h3>Add Equipment</h3>
<EditForm Model="@newEquipment" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="equipmentName">Name:</label>
        <InputText id="equipmentName" @bind-Value="newEquipment.Equipment_Name" class="form-control" />
    </div>
    <div class="form-group">
        <label for="equipmentID">ID:</label>
        <InputText id="equipmentID" @bind-Value="newEquipment.Equipment_IDToString" class="form-control" />
    </div>
    <div class="form-group">
        <label for="categoryID">Category:</label>
        <InputText id="categoryID" @bind-Value="newEquipment.Category_IDToString" class="form-control" />
    </div>
    <div class="form-group">
        <label for="dailyRate">Daily Rate:</label>
        <InputText id="dailyRate" @bind-Value="newEquipment.Daily_RateToString" class="form-control" />
    </div>
    <div class="form-group">
        <label for="description">Description:</label>
        <InputText id="description" @bind-Value="newEquipment.Description" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>
@code {
    private Equipment newEquipment = new Equipment();
    private List<Equipment> equipments = new List<Equipment>();
    private Equipment editTarget = null;
    private bool equipmentsLoaded = false;

    private void HandleValidSubmit()
    {
        equipments.Add(newEquipment);
        SaveEquipmentsToFile(equipments);
        newEquipment = new Equipment();
    }
    private void SaveEquipmentsToFile(List <Equipment> equipments)
    {
        string filePath = @"C:\Users\wchri\OneDrive\Documents\Visual Studio 2022\MauiApp1\MauiApp1\equipments.txt";
        using StreamWriter writer = new StreamWriter(filePath);
        foreach (var equipment in equipments)
        {
            writer.WriteLine($"{equipment.Equipment_Name},{equipment.Equipment_ID},{equipment.Category_ID},{equipment.Daily_Rate},{equipment.Description}");
        }
    }


    public void LoadEquipmentsToFile()
    {
        string filePath = @"C:\Users\wchri\OneDrive\Documents\Visual Studio 2022\MauiApp1\MauiApp1\equipments.txt";
        if (File.Exists(filePath))
        {
            using StreamReader reader = new StreamReader(filePath);
            string line;
            while ((line = reader.ReadLine()) != null)
            {
                var parts = line.Split(',');
                equipments.Add(new Equipment
                {
                    Equipment_Name = parts[0],
                    Equipment_ID = int.Parse(parts[1]),
                    Category_ID = int.Parse(parts[2]),
                    Daily_Rate = int.Parse(parts[3]),
                    Description = parts[4],

                });

            }
        }
        equipmentsLoaded = true;
    }
    private void EditEquipment(Equipment equipment)
    {
        editTarget = equipment;
    }
    private void UpdateEquipment(Equipment equipment)
    {
        editTarget = null;
        SaveEquipmentsToFile(equipments);
    }
    private void DeleteEquipment(Equipment equipment)
    {
        equipments.Remove(equipment);
        SaveEquipmentsToFile(equipments);
    }
    private void CancelEdit()
    {
        editTarget = null;
    }
}
